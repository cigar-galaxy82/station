profile = "address/geocoding@3.0"
provider = "opencage"

// Opencage API documentation
//  https://opencagedata.com/api

map Geocode {
  payload = input.query || `${input.streetAddress || ""} ${input.addressLocality || ""} ${input.addressDistrict || ""} ${input.addressRegion || ""} ${input.postalCode || ""} ${input.addressCountry || ""}`
  
  http GET "/geocode/v1/json" {
    security "apikey"
    request {
      query {
        q = payload
      }
    }

    response 200 "application/json" {
      return map error if (body.status.code !== 200) {
        title = "Error geocoding address"
        detail = body.status.message
      }

      map result {
        latitude = body.results[0].geometry.lat
        longitude = body.results[0].geometry.lng
      }
    }
  }
}


map ReverseGeocode {
  payload = `${input.latitude}+${input.longitude}`

  http GET "/geocode/v1/json" {
    security "apikey"
    request {
      query {
        q = payload
      }
    }

    response 200 "application/json" {
      return map error if (body.status.code !== 200) {
        title = "Error reverse geocoding coordinates"
        detail = body.status.message
      }

      map result body.results.map(result => {
        let mappedAddress = {};

        // country code
        if (result.components['ISO_3166-1_alpha-2']) {
          mappedAddress.addressCountry = result.components['ISO_3166-1_alpha-2'];
        } else if (result.components.country_code) {
          mappedAddress.addressCountry = result.components.country_code;
        }

        // region
        if (result.components.state_code) {
          mappedAddress.addressRegion = 
            result.components.city_district
            ? `${result.components.city_district}, ${result.components.state_code}`
            : result.components.state_code;
        }

        // district
        if (result.components.city_district) {
          mappedAddress.addressCityDistrict = result.components.city_district;
        }
        
        // locality
        if (result.components.city) {
          mappedAddress.addressLocality = 
            result.components.borough 
            ? `${result.components.borough}, ${result.components.city}`
            : result.components.city;
        }

        // street number
        if (result.components.house_number) {
          mappedAddress.streetAddress = result.components.house_number
        }

        // street address
        if (result.components.road) {
          mappedAddress.streetAddress = 
            mappedAddress.streetAddress
            ? `${mappedAddress.streetAddress} ${result.components.road}`
            : result.components.road;
        }

        // postal code
        if (result.components.postcode) {
          mappedAddress.postalCode = result.components.postcode;
        }

        // formatted address
        if (result.formatted) {
          mappedAddress.formattedAddress = result.formatted;
        }

        return mappedAddress;
      })
    }
  }
}

