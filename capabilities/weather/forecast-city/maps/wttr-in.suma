profile = "weather/forecast-city@1.0"
provider = "wttr-in"

map GetWeatherForecastInCity {
  set {
    unit = input.units
  }

   call fetchWeather(
    units = unit,
    city = input.city
  ) {
    return map error if (outcome.error) outcome.error
    return map result  outcome.data 
  }
}

operation pickTemperatures {
  return if (args.units === 'F') {
    avgTemp = Number(args.weather.avgtempF)
    maxTemp = Number(args.weather.maxtempF)
    minTemp = Number(args.weather.mintempF)
  }
  return if (args.units === 'K') {
    avgTemp = Number(args.weather.avgtempC) + 273
    maxTemp = Number(args.weather.maxtempC) + 273
    minTemp = Number(args.weather.mintempC) + 273
  }
  return {
    avgTemp = Number(args.weather.avgtempC)
    maxTemp = Number(args.weather.maxtempC)
    minTemp = Number(args.weather.mintempC)
  }
}

operation fetchWeather {
  http GET "/{args.city}" {

    request {
      query {
        // request JSON for response
        format = 'j1'
      }
    }

    response {
      fail if (statusCode !== 200) {
        message = body
      }
      forecast = call foreach(weather of body.weather) mapWeather(
        units = args.unit,
        weather = weather
      )
      
      return forecast
    }
  }
}

operation mapWeather {
  set {
    temperatureWrapper = call pickTemperatures(units = args.units, weather = args.weather)
  }
  return {
    averageTemperature = temperatureWrapper.avgTemp
    date = args.weather.date
    maxTemperature = temperatureWrapper.maxTemp
    minTemperature = temperatureWrapper.minTemp
  }
}
